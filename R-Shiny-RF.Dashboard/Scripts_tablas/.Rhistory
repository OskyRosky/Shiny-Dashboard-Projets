runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a numeric input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a numeric input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a password input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a select list input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a select list input control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a submit button.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a text input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a textarea input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create data input.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create date range input.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create radio buttons.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create radio buttons_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/File Upload Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Formattable Shiny.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Select variables from a data frame.R')
runApp('Select variables from a data frame_2_ifFALSE.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Select variables from a data frame_2_ifFALSE.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Slider Input Widget.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control.R')
library(shiny); runApp('C:/Users/oscar/Desktop/Ingresos - SIGAF/AI ---/Scripts+pruebas Shiny/Multiple filters 1.R')
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social") ,
clasi_arreglado  = c("CCSS")
)
View(clasificador)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_actual = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
joined <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
options(encoding="utf-8")
options(scipen=999)
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
View(actual)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
View(actual)
actual
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
##################
#  Data frames   #
##################
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
library(dplyr)
actual_1 <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual_2 <- actual %>% dplyr::full_join(clasificador)
View(actual_2)
View(actual_1)
View(actual_2)
install.packages("RODBC")
library(RODBC)
sigaf_gasto_actual_mensual  <-  mutate(sigaf_gasto_actual_mensual,
Año = as.numeric(Año)
)
library(readxl)
data <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx")
View(data)
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(tidyr)){ install.packages("tidyr")})
suppressMessages(if(!require(stringr)){ install.packages("stringr")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(openxlsx)){ install.packages("RcppRoll")})
suppressMessages(if(!require(openxlsx)){ install.packages("openxlsx")})
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(magrittr))
suppressWarnings(library(dplyr))
suppressWarnings(library(readxl))
suppressWarnings(library(ggplot2))
suppressWarnings(library(MASS))
Boston
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
attach(Boston)
modelo_multiple <- lm( medv ~ .)
modelo_multiple <- lm(formula = medv ~ ., data = Boston)
summary(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ ., data = Boston)
ols_step_all_possible(modelo_multiple)
install.packages("olsrr")
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
suppressWarnings(library(olsrr))
modelo_multiple <- lm(formula = medv ~ ., data = Boston)
ols_step_all_possible(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ ., data = Boston)
summary(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox + lstat +black +  dis, data = Boston)
ols_step_all_possible(modelo_multiple)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
suppressWarnings(library(olsrr))
suppressWarnings(library(reactable))
modelo_multiple <- lm(formula = medv ~ zn + crim + nox + lstat +black +  dis, data = Boston)
reactable(ols_step_all_possible(modelo_multiple)) ols_step_all_possible(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox + lstat +black +  dis, data = Boston)
ols_step_all_possible(modelo_multiple)
class(ols_step_all_possible(modelo_multiple))
reactable::reactable(modelos)
modelos <- ols_step_all_possible(modelo_multiple)
reactable::reactable(modelos)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +  dis + indus, data = Boston)
modelos <- ols_step_all_possible(modelo_multiple)
reactable::reactable(modelos)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
modelos <- ols_step_all_possible(modelo_multiple)
reactable::reactable(modelos)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
step(modelo_multiple,direction="backward")
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
step(modelo_multiple,direction="forward")
stepAIC(modelo_multiple,direction="forward")
stepAIC(modelo_multiple,direction="forward")
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
step(modelo_multiple,direction="both")
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
step(modelo_multiple,direction="backward")
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
stepAIC(modelo_multiple,direction="backward")
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
ols_step_backward_p(modelo_multiple, details = TRUE)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
ols_step_forward_p(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
ols_step_both_p(modelo_multiple)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
suppressWarnings(library(olsrr))
suppressWarnings(library(reactable))
suppressWarnings(library(modelr))
summary(modelo_multiple)
install.packages("modelr")
install.packages("broom")
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
suppressWarnings(library(olsrr))
suppressWarnings(library(reactable))
suppressWarnings(library(modelr))
suppressWarnings(library(broom))
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
summary(modelo_multiple)
AIC(modelo_multiple)
BIC(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
modelos <- ols_step_all_possible(modelo_multiple)
reactable::reactable(modelos)
modelo_multiple <- lm(formula = medv ~ zn + crim + nox +age + lstat +black +indus, data = Boston)
modelos <- ols_step_all_possible(modelo_multiple)
reactable::reactable(modelos)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(MASS))
suppressWarnings(library(stats))
suppressWarnings(library(psych))
suppressWarnings(library(olsrr))
suppressWarnings(library(reactable))
suppressWarnings(library(modelr))
suppressWarnings(library(broom))
suppressWarnings(library(ggpubr))
suppressWarnings(library(nortest))
suppressWarnings(library(ggplot2))
suppressWarnings(library(lmtest))
suppressWarnings(library(corrplot))
suppressWarnings(library(RColorBrewer))
suppressWarnings(library(car))
suppressWarnings(library(olsrr))
modelo_multiple <- lm(formula = medv ~ crim + indus+ age +  tax + black + lstat, data = Boston)
residuos <- summary(modelo_multiple)$residuals
ggplot(data = Boston, aes(y = residuos, x = medv)) + geom_point(col = 'blue') + geom_abline(slope = 0)
plot(modelo_multiple, 1)
plot(modelo_multiple, 3)
plot(residuos)
ggpubr::ggdensity(residuos,  fill = "lightgray", add = "mean",  xlab = "Residuos de la RLM")
n <- nrow(Boston)
k <- length(modelo_multiple$coefficients)-1
cv <- 2*sqrt(k/n)
plot(dffits(modelo_multiple),
ylab = "Standardized dfFits", xlab = "Index",
main = paste("Standardized DfFits, \n critical value = 2*sqrt(k/n) = +/-", round(cv,3)))
#Critical Value horizontal lines
abline(h = cv, lty = 2)
abline(h = -cv, lty = 2)
plot(modelo_multiple, 4)
plot(modelo_multiple, 5)
modelo_multiple <- lm(formula = medv ~ crim + indus+ age +  tax + black + lstat, data = Boston)
ols_plot_dfbetas(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ crim + indus+ age +  tax + black + lstat, data = Boston)
ols_plot_dfbetas(modelo_multiple)
modelo_multiple <- lm(formula = medv ~ crim + indus+ age +  tax + black + lstat, data = Boston)
ols_plot_resid_lev(modelo_multiple)
installed.packages("taskscheduleR", dependency= TRUE)
install.packages("taskscheduleR")
devtools::install_github("rstudio/addinexamples", type = "source")
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
taskscheduleR:::taskschedulerAddin()
library(shiny); source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
