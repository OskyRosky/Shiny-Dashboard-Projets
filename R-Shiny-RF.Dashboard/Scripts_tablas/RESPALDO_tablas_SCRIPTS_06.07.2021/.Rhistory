jsonDF
colnames
colnames(jsonDF)
jsonOutput
jsonOutput
colnames(jsonDF)
install.packages("xml2")
suppressWarnings(library(xml2))
xmlURL <- "https://data.cityofnewyork.us/api/views/25th-nujf/rows.xml?accessType=DOWNLOAD"
xmlOutput <- read_xml(xmlURL)
View(xmlOutput)
View(xmlOutput)
xml_contents(xml_children(xml_children(xmlOutput))[1])
getVar <- function(tag, data = xmlOutput){
path <- paste("//row//", tag, sep = "")
result <- xml_text(xml_find_all(data, path))
return(result)
}
getVar("brth_yr")[1:10]
getVar("gndr")[1:10]
xmlDF <- data.frame("Year of Birth" = getVar("brth_yr"),
"Gender" = getVar("gndr"),
"Ethnicity" = getVar("ethcty"),
"Child's First Name" = getVar("nm"),
"Count" = getVar("cnt"),
"Rank" = getVar("rnk"))
xmlDF[1:5,]
xml_attr(xml_contents(xml_find_all(xmlOutput, "//response//row")),"_uuid")
xmlOutput
xml_children(xmlOutput)
xml_children(xml_children(xmlOutput)
xml_children(xml_children(xmlOutput))
xml_contents(xml_children(xml_children(xmlOutput))
xml_contents(xml_children(xml_children(xmlOutput)))
xml_contents(xml_children(xml_children(xmlOutput))[1])
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(tidyverse))
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
content(MH_1)
rawToChar(MH_1$content)
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
content(MH_1)
rawToChar(MH_1$content)
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
content(MH_1)
rawToChar(MH_1$content)
str(content(MH_1))                                  # otra forma  #rawToChar(MH_2$content)
stringi::stri_enc_detect(content(MH_2, "raw"))
stringi::stri_enc_detect(content(MH_1, "raw"))
content(MH_1, "raw")
headers(MH_1)
suppressWarnings(library("methods"))
suppressWarnings(library("xml2"))
suppressWarnings(library("XML"))
suppressWarnings(library("methods"))
suppressWarnings(library("xml2"))
'<div class="offer-name">
<a href="http://www.somesite.com" itemprop="name">Fancy Product</a>
</div>' -> xData
Products <- xpathSApply(parsedHTML, "//div[@class='offer-name']", xmlValue)
Products <- xpathSApply(xData, "//div[@class='offer-name']", xmlValue)
library(XML)
parsedHTML <- xmlParse(xData)
Products <- xpathSApply(parsedHTML, "//div[@class='offer-name']", xmlValue)
hrefs <- xpathSApply(parsedHTML, "//div/a", xmlGetAttr, 'href')
Products
hrefs <- xpathSApply(parsedHTML, "//div/a", xmlGetAttr, 'href')
hrefs
Products
Products <- xpathSApply(parsedHTML, "//div[@class='offer-name']", xmlValue)
hrefs <- xpathSApply(parsedHTML, "//div/a", xmlGetAttr, 'href')
Products
hrefs
hrefs
Products
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(xml2))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
content(MH_1)
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
content(MH_1)
rawToChar(MH_1$content)
suppressWarnings(library(httr))
suppressWarnings(library(XML))
suppressWarnings(library(xml2))
suppressWarnings(library(tidyverse))
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
url <-"https://sigafcalidad.hacienda.go.cr/sap/bc/srt/wsdl/flv_10002A111AD1/bndg_url/sap/bc/srt/rfc/sap/zfmg_reports/350/zfmg_reports/binding?sap-client=350"
username <- "WS_CGR"
password <- "Hacienda01"
MH_1 <- GET(url,
authenticate(username,password, type = "basic"))
MH_1
MH_1
library(shiny); runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Action_button_link.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a numeric input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Input Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a numeric input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a password input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a select list input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a select list input control_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a submit button.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a text input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create a textarea input control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create data input.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create date range input.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create radio buttons.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Create radio buttons_2.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/File Upload Control.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Formattable Shiny.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Select variables from a data frame.R')
runApp('Select variables from a data frame_2_ifFALSE.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Select variables from a data frame_2_ifFALSE.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Slider Input Widget.R')
runApp('C:/Users/oscar/Desktop/Regla fiscal/Regla Fiscal ---- Dashboard/Sobre las opciones dinámicas en Shiny/Checkbox Group Input Control.R')
library(shiny); runApp('C:/Users/oscar/Desktop/Ingresos - SIGAF/AI ---/Scripts+pruebas Shiny/Multiple filters 1.R')
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social") ,
clasi_arreglado  = c("CCSS")
)
View(clasificador)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_actual = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
joined <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
options(encoding="utf-8")
options(scipen=999)
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
View(actual)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría")
)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
View(actual)
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
library(dplyr)
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
View(actual)
actual
actual <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual
############################################################
#  Prueba para hacer el match entre dos archivos de datos  #
############################################################
######################
# Opciones generales #
######################
options(encoding="utf-8")
options(scipen=999)
###############
#  Librerías  #
###############
suppressMessages(if(!require(readxl)){ install.packages("readxl")})
suppressMessages(if(!require(dplyr)){ install.packages("dplyr")})
suppressMessages(if(!require(DT)){ install.packages("DT")})
suppressMessages(if(!require(plyr)){ install.packages("plyr")})
suppressMessages(if(!require(readr)){ install.packages("readr")})
suppressMessages(if(!require(janitor)){ install.packages("janitor")})
suppressMessages(if(!require(shiny)){ install.packages("shiny")})
suppressMessages(if(!require(shinydashboard)){ install.packages("shinydashboard")})
suppressMessages(if(!require(shinydashboardPlus)){ install.packages("shinydashboardPlus")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(formattable)){ install.packages("formattable")})
suppressMessages(if(!require(highcharter)){ install.packages("highcharter")})
suppressMessages(if(!require(viridisLite)){ install.packages("viridisLite")})
suppressMessages(if(!require(stringi)){ install.packages("stringi")})
suppressMessages(if(!require(data.table)){ install.packages("data.table")})
suppressMessages(if(!require(data.table)){ install.packages("tidyr")})
suppressMessages(if(!require(data.table)){ install.packages("forecast")})
suppressMessages(if(!require(data.table)){ install.packages("kableExtra")})
suppressMessages(if(!require(data.table)){ install.packages("shinyWidgets")})
suppressMessages(if(!require(data.table)){ install.packages("png")})
suppressMessages(if(!require(data.table)){ install.packages("scales")})
suppressMessages(if(!require(data.table)){ install.packages("gt")})
suppressMessages(if(!require(data.table)){ install.packages("reactable")})
suppressMessages(if(!require(data.table)){ install.packages("RcppRoll")})
suppressMessages(if(!require(data.table)){ install.packages("sunburstR")})
suppressMessages(if(!require(data.table)){ install.packages("htmltools")})
suppressMessages(if(!require(data.table)){ install.packages("d3r")})
suppressMessages(if(!require(data.table)){ install.packages("openxlsx")})
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(DT))
suppressMessages(library(plyr))
suppressMessages(library(readr))
suppressMessages(library(janitor))
suppressMessages(library(shiny))
suppressMessages(library(shinydashboard))
suppressMessages(library(shinydashboardPlus))
suppressMessages(library(highcharter))
suppressMessages(library(formattable))
suppressMessages(library(highcharter))
suppressMessages(library(viridisLite))
suppressMessages(library(stringi))
suppressMessages(library(data.table))
suppressMessages(library(tidyr))
suppressMessages(library(forecast))
suppressMessages(library(kableExtra))
suppressMessages(library(shinyWidgets))
suppressMessages(library(png))
suppressMessages(library(scales))
suppressMessages(library(gt))
suppressMessages(library(reactable))
suppressMessages(library(RcppRoll))
suppressMessages(library(sunburstR))
suppressMessages(library(htmltools))
suppressMessages(library(d3r))
suppressMessages(library(openxlsx))
##################
#  Data frames   #
##################
clasificador <- data.frame(
clasi_original   = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría") ,
clasi_arreglado  = c("CCSS", "RECOPE", "CGR")
)
actual <- data.frame(
id = c(1,2,3,4,5,6,7),
clasi_original = c("Caja Costarricense de Seguro Social", "Refineria de Costa Rica", "Contraloría",
"Refineria de Costa Rica", "Contraloría","","")
)
library(dplyr)
actual_1 <- dplyr::inner_join(actual, clasificador, by = "clasi_original")
actual_2 <- actual %>% dplyr::full_join(clasificador)
View(actual_2)
View(actual_1)
View(actual_2)
install.packages("RODBC")
library(RODBC)
sigaf_gasto_actual_mensual  <-  mutate(sigaf_gasto_actual_mensual,
Año = as.numeric(Año)
)
library(shiny); source('C:/Users/oscar/Desktop/Ingresos - SIGAF/AI ---/AI_WEB/AI_SAF.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
